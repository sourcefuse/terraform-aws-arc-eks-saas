apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-for-fluent-bit
  namespace: kube-system
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  filter_namespace.lua: |
    function modify_namespace(tag, timestamp, record)
        local namespace = record["kubernetes"]["namespace_name"]
        if namespace then
            record["index_name"] = "logs-" .. namespace -- Adjust the index naming scheme as needed
        end
        return 1, timestamp, record
    end

  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        Streams_File  streams.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-elasticsearch.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Path              /var/log/containers/*.log
        Tag               kube.*
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  

  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On

    [FILTER]
        Name                lua
        Match               *
        script              /fluent-bit/etc/filter_namespace.lua
        call                modify_namespace


  output-elasticsearch.conf: |
    [OUTPUT]
        Name                 es
        Match                *
        Host                 {{ .Values.opensearchDoamin }}
        Port                 443
        TLS                  On
        Replace_Dots         On
        tls.verify           Off
        AWS_Auth             On
        AWS_Region           {{ .Values.region }}
        Retry_Limit          false
        Logstash_Format      On
        Logstash_Prefix_Key  index_name
        Type                 _doc  
        suppress_type_name   On

 


  parsers.conf: |
    [PARSER]
        Name   apache
        Format regex
        Regex  ^(?<host>[^ ]*) [^ ]* (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

    [PARSER]
        Name   json
        Format json
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z
    
    [PARSER]
        
        Name         arc
        Format       regex
        Regex        (?<pod_name>[a-z0-9](?:[-a-z0-9]*[a-z0-9])?(?:\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)_(?<namespace_name>[^_]+)_(?<container_name>.+)-(?<docker_id>[a-z0-9]{64})\.log$
        Time_Key     time
        Time_Format  %d/%b/%Y:%H:%M:%S %z
        


    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
        Time_Keep   On
        Escape      Off  # Disable escaping of special characters
        
    
        # Extract custom fields
        Decode_Field_As   custom_field $.log.custom_field
        Decode_Field_As   another_custom_field $.log.another_custom_field

    [PARSER]
        Name        syslog
        Format      regex
        Regex       ^\<(?<pri>[0-9]+)\>(?<time>[^ ]* {1,2}[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$
        Time_Key    time
        Time_Format %b %d %H:%M:%S

  