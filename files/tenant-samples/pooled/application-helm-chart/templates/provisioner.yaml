apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: {{ .Values.tier }}-{{ .Values.tenant }}
  annotations:
    kubernetes.io/description: "NodePool to restrict the number of cpus provisioned to 100"
spec:
  template:
    metadata:
      labels:
        pooled-node: {{ .Values.tier }}
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        name: {{ .Values.tier }}-{{ .Values.tenant }}
      taints:
        - key: pooled-node
          value: "pooled"
          effect: NoSchedule

  limits:
    cpu: 100
    memory: 1000Gi
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: {{ .Values.tier }}-{{ .Values.tenant }}
  annotations:
    kubernetes.io/description: "General purpose EC2NodeClass for running Amazon Linux 2 nodes"
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: {{ .Values.karpenterRoleName }} 
  subnetSelectorTerms:
    - tags:
        Type: "private"
  securityGroupSelectorTerms:
    - tags:
        "aws:eks:cluster-name": {{ .Values.eksClusterName }}
  tags:
    Tenant: {{ .Values.tenant }}
    Tenant_ID: {{ .Values.tenantID }}





